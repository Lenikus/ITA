пример простой программа
#include <iostream>
int main(){
std::cout << "Hello, world!" << std::endl;
}

базовый тип данные
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.

правильно выбрать тип данные
Тип данных выбирают исходя из диапазона допустимых значений.

int
Тип int предназначен для хранения целых чисел, занимает 2 или 4 байта(в зависимости от разряднсти). 
Диапазон значений: -2^15...2^15-1 для 2-х байт и -2^31...2^31-1 для 4-х байт.

float
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...

double
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...

bool
Тип bool - логический тип для хранения значений true (истина) и false (ложь). Занимает 1 байт.

char
Тип char - символьный тип. Занимает 1 байт. Диапазон значений: -2^7...2^7-1.
Тип данных char является целочисленным типом, т.е. базовое значение хранится как целое число, которое интерпретируется как символ ASCII.

ascii
ASCII расшифровывается как American Standard Code for Information Interchange (Американский стандартный код для обмена информацией) и определяет конкретный способ представления английских символов (плюс несколько других символов) в виде чисел от 0 до 127 (называемых кодом ASCII или кодовым обозначением). Например, код ASCII 98 интерпретируется как символ 'b'.

void
Тип void - пустой тип, отсутствие типа. Занимает 2 или 4 байта. Нельзя определить переменную с типом void.
void обычно используется в нескольких разных контекстах:
1) указать, что функция не возвращает значение;
2) указать, что функция не принимает никаких параметров (устарело);
3) создать безтиповый указатель.

составной тип данные
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.

спецификатор тип
В C++ определены четыре спецификатора типов данных:
1) short - короткий; 
2) long - длинный; 
3) signed - знаковый; 
4) unsigned - беззнаковый.

short
Спецификатор short (короткий) применяется к типу int. 
Значение типа short int занимает 2 байта.
Типы short, short int, signed short и signed short int являются синонимами.

long
Спецификатор long (длинный) применяется к типам int, long int и double. 
Значение типа long int занимает 4 байта.
Типы long, long int, signed long и signed long int являются синонимами.
Значение типа long double занимает 8, 10 или 16 байт. 
В некоторых реализациях компилятора типы double и long double являются синонимами.
Значение типа long long занимает 8 байт.
Типы long long, long long int, signed long long и signed long long int являются синонимами.

signed
Спецификатор signed (знаковый, т.е. возможность использования отрицательных значений) применяется к типам int и char. 
Размер в байтах не меняется.
Типы int, signed и signed int являются синонимами.
Типы char и signed char являются синонимами.

unsigned
Спецификатор unsigned (беззнаковый) применяется к типам char, int и модификациям int. Диапазон значений начинается с 0.
Размер в байтах не меняется.
Типы unsigned и usigned int являются синонимами.

диапазон unsigned char
0...2^8-1

диапазон signed char
-2^7...2^7-1

диапазон unsigned short
Аналогично unsigned short int: 0...2^16-1

диапазон unsigned long
Аналогично unsigned long int: 0...2^32-1

диапазон unsigned long long
Аналогично unsigned long long int: 0...2^64-1

символьный литерал
Символьные литералы всегда помещаются в одинарные кавычки (например, 'g', '1', ' ')

переменный
Переменная - это именованный объект в памяти, принадлежащий определенному типу данных. Значение можно менять в ходе работы программы.
Для использования переменной, ее надо объявить и определить.

объявление
Объявление - инструкция, приписывающая объекту определенное имя

определение
Определение - объявление с выделением памяти

инициализация
Определение объекта с заданием определенного значения

определить переменный
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.

задать имя переменный правило
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.

if
Оператор if используется для записи условного оператора.

пример if
Вычисление модуля числа x.
if(x < 0)
   x = -x;

switch
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.

правило switch
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.

пример switch
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }

enum
Перечисляемый тип задается с помощью enum, каждому символическому значению соответствует целое число.

вид цикл
Выделяют два типа циклов: цикл со счетчиком и циклы с условием (предусловие, постусловие).

main
Программа на языке C++ должна содержать функцию main. С этой функции начинается выполнение программы.
По стандарту языка функция main не имеет аргументов и возвращает занчение типа int:
int main(){
//здесь пишут инструкции языка С++
}

//
Это однострочный комментарий

:?
Это тернарный оператор условия

основной тип данные
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.

правильно подобрать тип данные
Тип данных выбирают исходя из диапазона допустимых значений.

целочисленный
Тип int предназначен для хранения целых чисел, занимает 2 или 4 байта(в зависимости от разряднсти). 
Диапазон значений: -2^15...2^15-1 для 2-х байт и -2^31...2^31-1 для 4-х байт.

целое число
Тип int предназначен для хранения целых чисел, занимает 2 или 4 байта(в зависимости от разряднсти). 
Диапазон значений: -2^15...2^15-1 для 2-х байт и -2^31...2^31-1 для 4-х байт.

действительный одинарный точность
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...

действительный двойной точность
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...

логический
Тип bool - логический тип для хранения значений true (истина) и false (ложь). Занимает 1 байт.

символьный
Тип char - символьный тип. Занимает 1 байт. Диапазон значений: -2^7...2^7-1.
Тип данных char является целочисленным типом, т.е. базовое значение хранится как целое число, которое интерпретируется как символ ASCII.

пустой тип
Тип void - пустой тип, отсутствие типа. Занимает 2 или 4 байта. Нельзя определить переменную с типом void.
void обычно используется в нескольких разных контекстах:
1) указать, что функция не возвращает значение;
2) указать, что функция не принимает никаких параметров (устарело);
3) создать безтиповый указатель.

производный тип данные
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.

короткий
Спецификатор short (короткий) применяется к типу int. 
Значение типа short int занимает 2 байта.
Типы short, short int, signed short и signed short int являются синонимами.

длинный
Спецификатор long (длинный) применяется к типам int, long int и double. 
Значение типа long int занимает 4 байта.
Типы long, long int, signed long и signed long int являются синонимами.
Значение типа long double занимает 8, 10 или 16 байт. 
В некоторых реализациях компилятора типы double и long double являются синонимами.
Значение типа long long занимает 8 байт.
Типы long long, long long int, signed long long и signed long long int являются синонимами.

знаковый
Спецификатор signed (знаковый, т.е. возможность использования отрицательных значений) применяется к типам int и char. 
Размер в байтах не меняется.
Типы int, signed и signed int являются синонимами.
Типы char и signed char являются синонимами.

беззнаковый
Спецификатор unsigned (беззнаковый) применяется к типам char, int и модификациям int. Диапазон значений начинается с 0.
Размер в байтах не меняется.
Типы unsigned и usigned int являются синонимами.

диапазон unsigned символьный
0...2^8-1

диапазон беззнаковый char
0...2^8-1

диапазон signed символьный
-2^7...2^7-1

диапазон знаковый char
-2^7...2^7-1

диапазон unsigned короткий
Аналогично unsigned short int: 0...2^16-1

диапазон беззнаковый short
Аналогично unsigned short int: 0...2^16-1

диапазон unsigned длинный
Аналогично unsigned long int: 0...2^32-1

диапазон беззнаковый long
Аналогично unsigned long int: 0...2^32-1

диапазон unsigned long длинный
Аналогично unsigned long long int: 0...2^64-1

диапазон беззнаковый long long
Аналогично unsigned long long int: 0...2^64-1

char литерал
Символьные литералы всегда помещаются в одинарные кавычки (например, 'g', '1', ' ')

создать
Определение - объявление с выделением памяти

создание
Определение - объявление с выделением памяти

создать переменный
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.

задать идентификатор переменный правило
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.

условный оператор
Оператор if используется для записи условного оператора.

пример условный оператор
Вычисление модуля числа x.
if(x < 0)
   x = -x;

оператор выбор
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.

правило оператор выбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.

пример оператор выбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }

перечисление
Перечисляемый тип задается с помощью enum, каждому символическому значению соответствует целое число.

целый
Тип int предназначен для хранения целых чисел, занимает 2 или 4 байта(в зависимости от разряднсти). 
Диапазон значений: -2^15...2^15-1 для 2-х байт и -2^31...2^31-1 для 4-х байт.

вещественный одинарный точность
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...

вещественный двойной точность
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...

диапазон беззнаковый символьный
0...2^8-1

диапазон знаковый символьный
-2^7...2^7-1

диапазон беззнаковый короткий
Аналогично unsigned short int: 0...2^16-1

диапазон беззнаковый длинный
Аналогично unsigned long int: 0...2^32-1

диапазон unsigned длинный длинный
Аналогично unsigned long long int: 0...2^64-1

диапазон беззнаковый long длинный
Аналогично unsigned long long int: 0...2^64-1

определить
Определение - объявление с выделением памяти

определение переменный
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.

оператор подбор
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.

правило оператор подбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.

пример оператор подбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }

перечислять
Перечисляемый тип задается с помощью enum, каждому символическому значению соответствует целое число.

диапазон unsigned длинный long
Аналогично unsigned long long int: 0...2^64-1

диапазон беззнаковый длинный длинный
Аналогично unsigned long long int: 0...2^64-1

создание переменный
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.

диапазон беззнаковый длинный long
Аналогично unsigned long long int: 0...2^64-1

