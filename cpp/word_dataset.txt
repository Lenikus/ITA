пример
[
пример прост программ
#include <iostream>
int main(){
std::cout << "Hello, world!" << std::endl;
}
пример if
Вычисление модуля числа x.
if(x < 0)
   x = -x;
пример switch
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
пример условн
Вычисление модуля числа x.
if(x < 0)
   x = -x;
пример услов
Вычисление модуля числа x.
if(x < 0)
   x = -x;
пример оператор выбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
пример оператор подбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
]
прост
[
пример прост программ
#include <iostream>
int main(){
std::cout << "Hello, world!" << std::endl;
}
]
программ
[
пример прост программ
#include <iostream>
int main(){
std::cout << "Hello, world!" << std::endl;
}
]
базов
[
базов тип дан
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.
]
тип
[
базов тип дан
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.
правильн выбра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
составн тип дан
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.
спецификатор тип
В C++ определены четыре спецификатора типов данных:
1) short - короткий; 
2) long - длинный; 
3) signed - знаковый; 
4) unsigned - беззнаковый.
основн тип дан
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.
правильн подобра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
пуст тип
Тип void - пустой тип, отсутствие типа. Занимает 2 или 4 байта. Нельзя определить переменную с типом void.
void обычно используется в нескольких разных контекстах:
1) указать, что функция не возвращает значение;
2) указать, что функция не принимает никаких параметров (устарело);
3) создать безтиповый указатель.
производн тип дан
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.
]
дан
[
базов тип дан
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.
правильн выбра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
составн тип дан
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.
основн тип дан
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.
правильн подобра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
производн тип дан
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.
]
правильн
[
правильн выбра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
правильн подобра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
]
выбра
[
правильн выбра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
]
int
[
int
Тип int предназначен для хранения целых чисел, занимает 2 или 4 байта(в зависимости от разряднсти). 
Диапазон значений: -2^15...2^15-1 для 2-х байт и -2^31...2^31-1 для 4-х байт.
]
float
[
float
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...
]
double
[
double
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...
]
bool
[
bool
Тип bool - логический тип для хранения значений true (истина) и false (ложь). Занимает 1 байт.
]
char
[
char
Тип char - символьный тип. Занимает 1 байт. Диапазон значений: -2^7...2^7-1.
Тип данных char является целочисленным типом, т.е. базовое значение хранится как целое число, которое интерпретируется как символ ASCII.
диапазон unsigned char
0...2^8-1
диапазон signed char
-2^7...2^7-1
диапазон беззнаков char
0...2^8-1
диапазон знаков char
-2^7...2^7-1
char литера
Символьные литералы всегда помещаются в одинарные кавычки (например, 'g', '1', ' ')
]
ascii
[
ascii
ASCII расшифровывается как American Standard Code for Information Interchange (Американский стандартный код для обмена информацией) и определяет конкретный способ представления английских символов (плюс несколько других символов) в виде чисел от 0 до 127 (называемых кодом ASCII или кодовым обозначением). Например, код ASCII 98 интерпретируется как символ 'b'.
]
void
[
void
Тип void - пустой тип, отсутствие типа. Занимает 2 или 4 байта. Нельзя определить переменную с типом void.
void обычно используется в нескольких разных контекстах:
1) указать, что функция не возвращает значение;
2) указать, что функция не принимает никаких параметров (устарело);
3) создать безтиповый указатель.
]
составн
[
составн тип дан
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.
]
спецификатор
[
спецификатор тип
В C++ определены четыре спецификатора типов данных:
1) short - короткий; 
2) long - длинный; 
3) signed - знаковый; 
4) unsigned - беззнаковый.
]
short
[
short
Спецификатор short (короткий) применяется к типу int. 
Значение типа short int занимает 2 байта.
Типы short, short int, signed short и signed short int являются синонимами.
диапазон unsigned short
Аналогично unsigned short int: 0...2^16-1
диапазон беззнаков short
Аналогично unsigned short int: 0...2^16-1
]
long
[
long
Спецификатор long (длинный) применяется к типам int, long int и double. 
Значение типа long int занимает 4 байта.
Типы long, long int, signed long и signed long int являются синонимами.
Значение типа long double занимает 8, 10 или 16 байт. 
В некоторых реализациях компилятора типы double и long double являются синонимами.
Значение типа long long занимает 8 байт.
Типы long long, long long int, signed long long и signed long long int являются синонимами.
диапазон unsigned long
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned long long
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned long long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков long
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков long long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков long long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned длин long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин long
Аналогично unsigned long long int: 0...2^64-1
]
signed
[
signed
Спецификатор signed (знаковый, т.е. возможность использования отрицательных значений) применяется к типам int и char. 
Размер в байтах не меняется.
Типы int, signed и signed int являются синонимами.
Типы char и signed char являются синонимами.
диапазон signed char
-2^7...2^7-1
диапазон signed символьн
-2^7...2^7-1
]
unsigned
[
unsigned
Спецификатор unsigned (беззнаковый) применяется к типам char, int и модификациям int. Диапазон значений начинается с 0.
Размер в байтах не меняется.
Типы unsigned и usigned int являются синонимами.
диапазон unsigned char
0...2^8-1
диапазон unsigned short
Аналогично unsigned short int: 0...2^16-1
диапазон unsigned long
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned long long
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned символьн
0...2^8-1
диапазон unsigned коротк
Аналогично unsigned short int: 0...2^16-1
диапазон unsigned длин
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned длин long
Аналогично unsigned long long int: 0...2^64-1
]
диапазон
[
диапазон unsigned char
0...2^8-1
диапазон signed char
-2^7...2^7-1
диапазон unsigned short
Аналогично unsigned short int: 0...2^16-1
диапазон unsigned long
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned long long
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned символьн
0...2^8-1
диапазон беззнаков char
0...2^8-1
диапазон signed символьн
-2^7...2^7-1
диапазон знаков char
-2^7...2^7-1
диапазон unsigned коротк
Аналогично unsigned short int: 0...2^16-1
диапазон беззнаков short
Аналогично unsigned short int: 0...2^16-1
диапазон unsigned длин
Аналогично unsigned long int: 0...2^32-1
диапазон беззнаков long
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков long long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков символьн
0...2^8-1
диапазон знаков символьн
-2^7...2^7-1
диапазон беззнаков коротк
Аналогично unsigned short int: 0...2^16-1
диапазон беззнаков длин
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned длин long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин long
Аналогично unsigned long long int: 0...2^64-1
]
символьн
[
символьн литера
Символьные литералы всегда помещаются в одинарные кавычки (например, 'g', '1', ' ')
символьн
Тип char - символьный тип. Занимает 1 байт. Диапазон значений: -2^7...2^7-1.
Тип данных char является целочисленным типом, т.е. базовое значение хранится как целое число, которое интерпретируется как символ ASCII.
диапазон unsigned символьн
0...2^8-1
диапазон signed символьн
-2^7...2^7-1
диапазон беззнаков символьн
0...2^8-1
диапазон знаков символьн
-2^7...2^7-1
]
литера
[
символьн литера
Символьные литералы всегда помещаются в одинарные кавычки (например, 'g', '1', ' ')
char литера
Символьные литералы всегда помещаются в одинарные кавычки (например, 'g', '1', ' ')
]
перемен
[
перемен
Переменная - это именованный объект в памяти, принадлежащий определенному типу данных. Значение можно менять в ходе работы программы.
Для использования переменной, ее надо объявить и определить.
определ перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
зада им перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
созда перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
зада идентификатор перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
определен перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
создан перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
]
объявлен
[
объявлен
Объявление - инструкция, приписывающая объекту определенное имя
]
определен
[
определен
Определение - объявление с выделением памяти
определен перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
]
инициализац
[
инициализац
Определение объекта с заданием определенного значения
]
определ
[
определ перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
определ
Определение - объявление с выделением памяти
]
зада
[
зада им перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
зада идентификатор перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
]
им
[
зада им перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
]
прав
[
зада им перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
прав switch
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
зада идентификатор перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
прав оператор выбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
прав оператор подбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
]
if
[
if
Оператор if используется для записи условия.
пример if
Вычисление модуля числа x.
if(x < 0)
   x = -x;
тернарн if оператор
:? Это тернарный оператор условия
]
switch
[
switch
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.
прав switch
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
пример switch
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
]
enum
[
enum
Перечисляемый тип задается с помощью enum, каждому символическому значению соответствует целое число.
]
вид
[
вид цикл
Выделяют два типа циклов: цикл со счетчиком и циклы с условием (предусловие, постусловие).
]
цикл
[
вид цикл
Выделяют два типа циклов: цикл со счетчиком и циклы с условием (предусловие, постусловие).
]
main
[
main
Программа на языке C++ должна содержать функцию main. С этой функции начинается выполнение программы.
По стандарту языка функция main не имеет аргументов и возвращает занчение типа int:
int main(){
//здесь пишут инструкции языка С++
}
]
однострочн
[
однострочн комментар
//Это однострочный комментарий
]
комментар
[
однострочн комментар
//Это однострочный комментарий
]
тернарн
[
тернарн условн оператор
:? Это тернарный оператор условия
тернарн if оператор
:? Это тернарный оператор условия
тернарн услов оператор
:? Это тернарный оператор условия
]
условн
[
тернарн условн оператор
:? Это тернарный оператор условия
условн
Оператор if используется для записи условия.
пример условн
Вычисление модуля числа x.
if(x < 0)
   x = -x;
]
оператор
[
тернарн условн оператор
:? Это тернарный оператор условия
оператор выбор
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.
прав оператор выбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
пример оператор выбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
тернарн if оператор
:? Это тернарный оператор условия
оператор подбор
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.
прав оператор подбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
пример оператор подбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
тернарн услов оператор
:? Это тернарный оператор условия
]
основн
[
основн тип дан
К базовым типам данных языка С++ относят:
1) целочисленные;
2) вещественные;
3) логический;
4) символьный;
5) пустой тип.
С каждым типом данных связан свой диапазон значений (количество байт под одно значение) и допустимые операции.
]
подобра
[
правильн подобра тип дан
Тип данных выбирают исходя из диапазона допустимых значений.
]
целочислен
[
целочислен
Тип int предназначен для хранения целых чисел, занимает 2 или 4 байта(в зависимости от разряднсти). 
Диапазон значений: -2^15...2^15-1 для 2-х байт и -2^31...2^31-1 для 4-х байт.
]
действительн
[
действительн одинарн точност
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...
действительн двойн точност
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...
]
одинарн
[
действительн одинарн точност
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...
веществен одинарн точност
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...
]
точност
[
действительн одинарн точност
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...
действительн двойн точност
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...
веществен одинарн точност
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...
веществен двойн точност
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...
]
двойн
[
действительн двойн точност
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...
веществен двойн точност
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...
]
логическ
[
логическ
Тип bool - логический тип для хранения значений true (истина) и false (ложь). Занимает 1 байт.
]
пуст
[
пуст тип
Тип void - пустой тип, отсутствие типа. Занимает 2 или 4 байта. Нельзя определить переменную с типом void.
void обычно используется в нескольких разных контекстах:
1) указать, что функция не возвращает значение;
2) указать, что функция не принимает никаких параметров (устарело);
3) создать безтиповый указатель.
]
производн
[
производн тип дан
К составным (производным) типам данных языка С++ относят:
1) базовые типы со спецификаторами;
2) массивы;
3) указатели и ссылки;
4) структуры, объединения и классы;
5) перечисления.
]
коротк
[
коротк
Спецификатор short (короткий) применяется к типу int. 
Значение типа short int занимает 2 байта.
Типы short, short int, signed short и signed short int являются синонимами.
диапазон unsigned коротк
Аналогично unsigned short int: 0...2^16-1
диапазон беззнаков коротк
Аналогично unsigned short int: 0...2^16-1
]
длин
[
длин
Спецификатор long (длинный) применяется к типам int, long int и double. 
Значение типа long int занимает 4 байта.
Типы long, long int, signed long и signed long int являются синонимами.
Значение типа long double занимает 8, 10 или 16 байт. 
В некоторых реализациях компилятора типы double и long double являются синонимами.
Значение типа long long занимает 8 байт.
Типы long long, long long int, signed long long и signed long long int являются синонимами.
диапазон unsigned длин
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин
Аналогично unsigned long int: 0...2^32-1
диапазон unsigned длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон unsigned длин long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин long
Аналогично unsigned long long int: 0...2^64-1
]
знаков
[
знаков
Спецификатор signed (знаковый, т.е. возможность использования отрицательных значений) применяется к типам int и char. 
Размер в байтах не меняется.
Типы int, signed и signed int являются синонимами.
Типы char и signed char являются синонимами.
диапазон знаков char
-2^7...2^7-1
диапазон знаков символьн
-2^7...2^7-1
]
беззнаков
[
беззнаков
Спецификатор unsigned (беззнаковый) применяется к типам char, int и модификациям int. Диапазон значений начинается с 0.
Размер в байтах не меняется.
Типы unsigned и usigned int являются синонимами.
диапазон беззнаков char
0...2^8-1
диапазон беззнаков short
Аналогично unsigned short int: 0...2^16-1
диапазон беззнаков long
Аналогично unsigned long int: 0...2^32-1
диапазон беззнаков long long
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков символьн
0...2^8-1
диапазон беззнаков коротк
Аналогично unsigned short int: 0...2^16-1
диапазон беззнаков длин
Аналогично unsigned long int: 0...2^32-1
диапазон беззнаков long длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин длин
Аналогично unsigned long long int: 0...2^64-1
диапазон беззнаков длин long
Аналогично unsigned long long int: 0...2^64-1
]
созда
[
созда
Определение - объявление с выделением памяти
созда перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
]
создан
[
создан
Определение - объявление с выделением памяти
создан перемен
Для определения переменной необходимо описать ее тип и через пробел имя переменной. Например:
int x;
определяет переменную x типа int.
]
идентификатор
[
зада идентификатор перемен прав
При создании имени переменной (идентификатора) допустимо использовать только буквы, цифры и знак нижнего почеркивания, причем имя не должно начинаться с цифры.
]
услов
[
услов
Оператор if используется для записи условия.
пример услов
Вычисление модуля числа x.
if(x < 0)
   x = -x;
тернарн услов оператор
:? Это тернарный оператор условия
]
выбор
[
оператор выбор
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.
прав оператор выбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
пример оператор выбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
]
перечислен
[
перечислен
Перечисляемый тип задается с помощью enum, каждому символическому значению соответствует целое число.
]
цел
[
цел
Тип int предназначен для хранения целых чисел, занимает 2 или 4 байта(в зависимости от разряднсти). 
Диапазон значений: -2^15...2^15-1 для 2-х байт и -2^31...2^31-1 для 4-х байт.
]
веществен
[
веществен одинарн точност
Тип float - вещественный тип для хранения чисел с плавающей точкой, одинарной точности. Занимает 4 байта. Диапазон значений: ...
веществен двойн точност
Тип double - вещественный тип для хранения чисел с плавающей точкой, двойной точности. Занимает 8 байт. Диапазон значений: ...
]
подбор
[
оператор подбор
Оператор выбора switch используется для множественного выбора из заранее известного набора значений.
прав оператор подбор
В селекторе и метках switch допустимо использовать порядковые типы: целочисленный, символьный, логический, перечисляемый.
пример оператор подбор
В данном примере...
char color;
cin >> color;
switch(){
   case 'r' : cout << "stop\n"; break;
   case 'y' : cout << "wait\n"; break;
   case 'g' : cout << "go\n"; break;
   default  : cout << "no command\n"; break;    
   }
]
перечисля
[
перечисля
Перечисляемый тип задается с помощью enum, каждому символическому значению соответствует целое число.
]
