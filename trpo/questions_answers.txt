Понятие технологии разработки ПО. 
Технология разработки ПО – совокупность приёмов, позволяющих создать безошибочную программу в течение заданного времени

Классификация программных средств. 
Различают 3 основных вида программного обеспечения: 
- системное; 
- прикладное; 
- инструментарий технологии программирования (инструментальные средства). 
ПО классифицируется также в соответствии с характеристиками, выполняемыми функциями: По режиму эксплуатации: групповое, индивидуальное, сетевое. По масштабу: малое, среднее, большое. По свойствам стабильности: стабильное, средней стабильности, нестабильное.

Жизненный цикл ПО
Жизненный цикл программного обеспечения (ПО) — период времени, который начинается с момента принятия решения о необходимости создания программного продукта и заканчивается в момент его полного изъятия из эксплуатации.

стадии жц по 
6 основных стадий, через которые проходит любая разработка ПО:
Сбор и анализ требований к программному продукту.
Разработка документации для всех требований к продукту.
Разработка дизайна продукта.
Разработка программного обеспечения.
Прохождение различных тестов.
Ввод в эксплуатацию и поддержка ПО.

Стандарты ЖЦ. 
ГОСТ 34.601-90 Информационная технология. Комплекс стандартов на автоматизированные системы. Автоматизированные системы.
ISO/IEC 12207:1995 Information Technology – Software Life Cycle Process (принят в качествероссийского стандарта ГОСТ Р ИСО/МЭК 12207-99 – Информационные технологии.
ISO/IEC 15288 Systems engineering. System life cycle processes (Системная инженерия. Процессы жизненного цикла систем)

Процессы жизненного цикла. 
Основными процессами являются:
1. Процесс заказа (подраздел 5.1). Определяет работы заказчика, то есть организации, которая приобретает систему, программный продукт или программную услугу.
2. Процесс поставки (подраздел 5.2). Определяет работы поставщика, то есть организации, которая поставляет систему, программный продукт или программную услугу заказчику.
3. Процесс разработки (подраздел 5.3). Определяет работы разработчика, то есть организации, которая проектирует и разрабатывает программный продукт.
4. Процесс эксплуатации (подраздел 5.4). Определяет работы оператора, то есть организации, которая обеспечивает эксплуатационное обслуживание вычислительной системы в заданных условиях в интересах пользователей.

Водопадная модель жц
Водопадная модель жизненного цикла ПО предполагает последовательное выполнение различных этапов деятельности, включая анализ требований, проектирование, кодирование и тестирование отдельных модулей (компонентов), тестирование сборок и интегрированное тестирование всего конечного продукта.

инкрементная модель жц
Инкрементная модель (англ. increment — увеличение, приращение) подразумевает разработку программного обеспечения с линейной последовательностью стадий, но в несколько инкрементов (версий), т.е. с запланированным улучшением продукта за все время пока Жизненный цикл разработки ПО не подойдет к окончанию.

Итерационная модель жц
Итерационная модель предусматривает деление ЖЦ проекта на более мелкие задачи (итерации), которые являются мини-проектом, содержащим в себе все процессы разработки, но в уменьшенном, по сравнению с проектом, объеме. При этом в каждой итерации необходимо получить работающую версию системы, воплощающую в себе результаты проведенных ранее итераций.

спиральная модель жц 
Спиральная модель, предложенная Барри Боэмом в 1986 году, стала существенным прорывом в понимании природы разработки ПО.

Методы идентификации рисков
Основными способами идентификации рисков являются:
1) Информация о прошлых сделках компании (ретроспективный анализ) 
2) Мозговой штурм 
3) Метод Делфи 
4) Метод номинальной группы 
Качественный анализ рисков часто подвергается критике, так как он дает только список возможных рисков.

триггеры рисков
Триггер риска – событие или условие, реализация которого приводит к существенному изменению уровня риска или формально свидетельствует о наступлении риска.

Виды требований к ПО.
Требования к ПО состоят из трех уровней:
Бизнес-требования
Пользовательские требования
Функциональные требования

этнографический подходы к формированию требований к ПО
Подходы к формированию требований: метод, основанный на множестве опорных точек зрения, сценарии и этнографический метод. Другие подходы, которые могут использоваться в процессе разработки требований, - это методы структурного анализа и методы прототипирования.

Методологии RAD
RAD (от англ. rapid application development — быстрая разработка приложений) — концепция организации технологического процесса разработки программных продуктов, ориентированная на максимально быстрое получение результата в условиях сильных ограничений по срокам и бюджету и нечётко определённых требований к продукту.

Методологии DSDM
Метод разработки динамических систем (Dynamic Systems Development Method, DSDM) - это главным образом методика разработки программного обеспечения, основанная на концепции быстрой разработки приложений (Rapid Application Development, RAD). DSDM - это итеративный и инкрементный подход, который придаёт особое значение продолжительному участию в процессе пользователя/потребителя.

Методология Scrum.
Scrum — методика организации совместного рабочего процесса, в основе которой — поэтапная разработка и совершенствование продукта небольшой командой специалистов различного профиля.
Scrum изобрели программисты Джефф Сазерленд и Кен Швабер. Они наблюдали за работой американских военных и спецназа и пришли к выводу, что в основе успеха лежит качественная командная работа. Сам термин пришел из регби и переводится с английского как «схватка».